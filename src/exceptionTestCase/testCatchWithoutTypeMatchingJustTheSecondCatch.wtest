class AException inherits wollok.lang.Exception {  constructor(m) = super(m) }
class BException inherits wollok.lang.Exception {  constructor(m) = super(m) }
			
class A { 
	method m1() { throw new BException("hello you see") }
}
			
test "Test catch without type matching just the second catch" {


	const a = new A()
			
	try {
		a.m1()
		assert.fail("Should have thrown exception")
	}	
	
	catch e : AException {
		assert.fail("incorrenct catch !")
	}
				
	catch e : BException {
		// OK !
	}
		
	catch e {
		assert.fail("incorrect catch !")
	}

}
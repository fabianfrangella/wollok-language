class Point {
    var x
    var y
    constructor(_x, _y) {
        x = _x
        y = _y
    }
    constructor(p) = self(p.getX(), p.getY()) {
    }
    
    method getX() { return x }
    method getY() { return y }
}

class Circle inherits Point {
    var r
    constructor(_x, _y, _r) = super(_x, _y) {
        r = _r
    }
}

describe "constructors" {
	
	test "constructor with explicit builder" {

	assert.that(new Point(1,2).getX()==1)

	}
	
	test "constructor delegations to another constructor in the same class"{
		assert.that(new Point(new Point(3,4)).getY()==4)
	}
	
	test "constructor delegations to a superclass"{
		assert.that(new Circle (4,5,6).getY() == 5)
	}
}
